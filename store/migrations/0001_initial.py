# Generated by Django 5.0.14 on 2025-05-26 15:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BestSeller',
            fields=[
                ('product_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=255)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product_image_url', models.CharField(max_length=500)),
                ('total_purchases', models.IntegerField()),
            ],
            options={
                'db_table': 'best_sellers_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewArrival',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product_image_url', models.ImageField(upload_to='products/')),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'new_arrivals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelatedProducts',
            fields=[
                ('base_product_id', models.IntegerField()),
                ('related_product_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('brand', models.CharField(choices=[('NIKE', 'Nike'), ('ADIDAS', 'Adidas'), ('MERREL', 'Merrel'), ('GUCCI', 'Gucci'), ('SKECHERS', 'Skechers')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('M', 'Men'), ('W', 'Women'), ('U', 'Unisex')], max_length=1)),
                ('style', models.CharField(choices=[('RUN', 'Running'), ('CAS', 'Casual'), ('FOR', 'Formal'), ('SPO', 'Sports')], max_length=3)),
                ('similarity_score', models.IntegerField()),
                ('material', models.CharField(blank=True, choices=[('LEATHER', 'Leather'), ('SUEDE', 'Suede'), ('MESH', 'Mesh'), ('RUBBER', 'Rubber')], max_length=10, null=True)),
                ('colors', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'related_products_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SearchProduct',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('image', models.CharField(max_length=500)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('brand', models.CharField(max_length=255)),
                ('material', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=50)),
                ('style', models.CharField(max_length=255)),
                ('sizes', models.TextField()),
                ('colors', models.TextField()),
                ('technologies', models.TextField()),
            ],
            options={
                'db_table': 'search_products_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfileView',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150)),
                ('product_image_url', models.CharField(max_length=500)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('customer_id', models.IntegerField()),
                ('product_id', models.IntegerField(null=True)),
                ('product_name', models.CharField(max_length=255, null=True)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('date_ordered', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'user_profile_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('brand', models.CharField(blank=True, choices=[('NIKE', 'Nike'), ('ADIDAS', 'Adidas'), ('MERREL', 'Merrel'), ('GUCCI', 'Gucci'), ('SKECHERS', 'Skechers')], max_length=10, null=True)),
                ('material', models.CharField(blank=True, choices=[('LEATHER', 'Leather'), ('SUEDE', 'Suede'), ('MESH', 'Mesh'), ('RUBBER', 'Rubber')], max_length=10, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gender', models.CharField(choices=[('M', 'Men'), ('W', 'Women'), ('U', 'Unisex')], default='Unisex', max_length=1)),
                ('style', models.CharField(choices=[('RUN', 'Running'), ('CAS', 'Casual'), ('FOR', 'Formal'), ('SPO', 'Sports')], default='Casual', max_length=3)),
                ('sizes', models.CharField(default=0, help_text='Comma separated sizes (6,7,8)', max_length=100)),
                ('width', models.CharField(choices=[('S', 'Standard'), ('W', 'Wide'), ('N', 'Narrow')], default='Standard', max_length=1)),
                ('colors', models.CharField(default='Black', max_length=200)),
                ('technologies', models.CharField(blank=True, default='N/A', max_length=200)),
                ('purchase_count', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(upload_to='products/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='ProductAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField(auto_now_add=True)),
                ('action_type', models.CharField(max_length=10)),
                ('product_id', models.IntegerField()),
                ('product_name', models.CharField(max_length=255)),
                ('customer_id', models.IntegerField(blank=True, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock_before', models.IntegerField(blank=True, null=True)),
                ('stock_after', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_audit',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_customer', models.BooleanField(default=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='store_user_groups', related_query_name='store_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='store_user_permissions', related_query_name='store_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BillingDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('payment_method', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_ordered', models.DateTimeField(auto_now_add=True)),
                ('complete', models.BooleanField(default=False)),
                ('transaction_id', models.CharField(max_length=100, null=True)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('billing_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.billingdetails')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.order')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_description', models.TextField(blank=True, default='')),
                ('full_description', models.TextField(blank=True, default='')),
                ('manufacturer_info', models.TextField(blank=True, default='')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in grams', max_digits=6, null=True)),
                ('dimensions', models.CharField(blank=True, default='', help_text='Format: LxWxH in cm', max_length=50)),
                ('image_2', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('average_rating', models.DecimalField(decimal_places=1, default=0, max_digits=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('review_count', models.PositiveIntegerField(default=0)),
                ('features', models.TextField(blank=True, default='', help_text='Bullet point features (one per line)')),
                ('care_instructions', models.TextField(blank=True, default='')),
                ('shipping_info', models.TextField(blank=True, default='', help_text='Shipping and return policy information')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
    ]
